openapi: "3.1.0"
info:
  title: Electrs Rest API
  version: 1.0.0
  description: |
    A Rust Implementation of the Electrum Server.
    ## Api Docs are Currently under construction ⚒️⚒️⚒️
servers: 
  - description: "Blockstream Public" 
    url: "https://blockstream.info/api/"
paths:
  /blocks/tip/hash:
    get:
      summary: Get the hash of the tip block
      responses:
        '200':
          description: The hash of the tip block
          content:
            text/plain:
              schema:
                type: string
  /blocks/tip/height:
    get:
      summary: Get the height of the tip block
      responses:
        '200':
          description: The height of the tip block
          content:
            text/plain:
              schema:
                type: string
  /blocks/{start_height}:
    get:
      summary: Get blocks starting from a specific height
      parameters:
        - name: start_height
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of blocks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Block'
  /block-height/{height}:
    get:
      summary: Get block header by height
      parameters:
        - name: height
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Block header
          content:
            application/json:
              schema:
                type: string
  /block/{hash}:
    get:
      summary: Get block by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Block data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
  /block/{hash}/status:
    get:
      summary: Get block status by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Block status
          content:
            application/json:
              schema:
                type: object
  /block/{hash}/txids:
    get:
      summary: Get transaction IDs in a block by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /block/{hash}/header:
    get:
      summary: Get block header by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Block header
          content:
            text/plain:
              schema:
                type: string
  /block/{hash}/raw:
    get:
      summary: Get raw block data by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Raw block data
          content:
            application/octet-stream:
              schema:
                type: string
  /block/{hash}/txid/{index}:
    get:
      summary: Get transaction ID by index in a block
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: index
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction ID
          content:
            text/plain:
              schema:
                type: string
  /block/{hash}/txs:
    get:
      summary: Get transactions in a block starting from an index
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: start_index
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Transactions for a given block
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
  /address/{script_str}:
    get:
      summary: Get address stats
      parameters:
        - name: script_str
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Address Chain and Mempool stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
  /address/{script_str}/txs:
    get:
      summary: Get transactions for an address
      parameters:
        - name: script_str
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
  /address/{script_str}/utxo:
    get:
      summary: Get UTXOs for an address
      parameters:
        - name: script_str
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: UTXOs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utxo'
  /tx/{hash}:
    get:
      summary: Get transaction by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /tx/{hash}/status:
    get:
      summary: Get transaction status by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxStatus'
  /tx/{hash}/merkle-proof:
    get:
      summary: Get transaction merkle proof by hash
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/MerkleProof'
      responses:
        '200':
          description: Merkle proof
          content:
            application/json:
              schema:
                type: object
  /tx/{hash}/outspend/{index}:
    get:
      summary: Get outspend information for a transaction output
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: index
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Outspend information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outspend'
  /tx/{hash}/outspends:
    get:
      summary: Get outspend information for all outputs of a transaction
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Outspend information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Outspend'
  /broadcast:
    get:
      summary: Broadcast a transaction
      parameters:
        - name: tx
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction ID
          content:
            text/plain:
              schema:
                type: string
  /tx:
    post:
      summary: Broadcast a transaction
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Transaction ID
          content:
            text/plain:
              schema:
                type: string
  /mempool:
    get:
      summary: Get mempool backlog stats
      responses:
        '200':
          description: Mempool backlog stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolBacklogStats'
  /mempool/txids:
    get:
      summary: Get mempool transaction IDs
      responses:
        '200':
          description: Mempool transaction IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /mempool/recent:
    get:
      summary: Get recent mempool transactions
      responses:
        '200':
          description: Recent mempool transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MempoolTx'
  /fee-estimates:
    get:
      summary: Get fee estimates
      responses:
        '200':
          description: Fee estimates
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
components:
  schemas:
    Block:
      type: object
      properties:
        name: 
          type: string
        height: 
          type: integer
        version:
          type: integer
        timestamp: 
          type: integer
        tx_count: 
          type: integer
        size: 
          type: integer
        weight:
          type: integer
        merkle_root:
          type: string
        previousblockhash:
          type: string
        mediantime:
          type: integer
        nonce: 
          type: integer
        bits:
          type: integer
        difficulty:
          type: number
    BlockStatus:
      type: object
      properties:
        in_best_chain: 
          type: boolean
        height:
          type: integer
        next_best: 
          type: string
    Transaction:
      type: object
      properties:
        txid: 
          type: string
        version:
          type: number
        locktime:
          type: number
        vin:
          type: array
          items:
            $ref: '#/components/schemas/TxVin'
        vout: 
          type: array
          items:  
            $ref: '#/components/schemas/TxVout'
        weight:
          type: integer
        size:
          type: integer
        status:
          $ref: '#/components/schemas/TxStatus'
    TxStatus:
      type: object
      properties:
        confirmed: 
          type: boolean
        block_height: 
          type: integer
        block_hash:
          type: integer
        block_time:
          type: integer
    TxVin:
      type: object
      properties:
        txid: 
          type: string
        vout: 
          type: integer
        prevout: 
          type: string
        scriptsig: 
          type: string
        scriptsig_asm: 
          type: string
        witness: 
          type: array
          items:
            type: string
        is_coinbase: 
          type: boolean
        sequence: 
          type: integer
    TxVout:
      type: object
      properties:
        scriptpubkey:
          type: string
        scriptpubkey_asm:
          type: string
        scriptpubkey_type:
          type: string
        scriptpubkey_address:
          type: string
        value:
          type: integer
    Address:
      type: object
      properties:
        address: 
          type: string
        chain_stats:
          $ref: '#/components/schemas/ChainStats'
        mempool_stats:
          $ref: '#/components/schemas/MempoolStats'
    ChainStats:
      type: object
      properties:
        funded_txo_count: 
          type: integer
        funded_txo_sum:
          type: integer
        spent_txo_count:
          type: integer
        spent_txo_sum:
          type: integer
        tx_count:
          type: integer
    MempoolStats:
      type: object
      properties:
        funded_txo_count:
          type: integer
        funded_txo_sum:
          type: integer
        spent_txo_count:
          type: integer
        spent_txo_sum: 
          type: integer
        tx_count:
          type: integer
    Utxo:
      type: object
      properties:
        txid:
          type: string
        vout: 
          type: integer
        status:
          $ref: '#/components/schemas/TxStatus'
        value: 
          type: integer
    MerkleProof:
      type: object
      properties:
        block_height: 
          type: integer
        merkle: 
          type: array
          items:
            type: string
        pos: 
          type: integer
    Outspend:
      type: object
      properties:
        spent:
          type: boolean
    MempoolBacklogStats:
      type: object
      properties:
        count: 
          type: integer
        vsize:
          type: integer
        total_fee:
          type: integer
        fee_histogram:
          type: array
          items: 
            type: array
            items: 
              type: number
    MempoolTx:
      type: object
      properties: 
        txid: 
          type: string
        fee:
          type: integer
        vsize: 
          type: integer
        value:  
          type: integer